spring.application.name=searchservice
server.port=8090

# rabbitmq docker setup
spring.rabbitmq.host=172.30.1.33
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
# docker run -p 5672:5672 -p 15672:15672 rabbitmq:3-management
# this works



# H2 ��Error executing DDL�� error
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.hikari.jdbc-url=jdbc:h2:mem:testdb;MODE=MYSQL
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console


#Config server setup for Docker

# spring.cloud.config.uri=http://172.30.1.33:8888
# 로컬에서 실습하는경우 컨피그 서버의 url을 로컬장비의 ip주소로 바꾼다. pg 447    <- this works
spring.profiles.active=[default]
management.endpoints.web.exposure.include=refresh
# spring.cloud.config.uri=http://127.0.0.1:8888



#Eureka setup for Docker
eureka.client.eureka-server-port=8761
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
# eureka.instance.preferIpAddress=true
# eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER:http://192.168.0.180:8761/eureka/}
eureka.instance.hostname=localhost
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:8761/eureka/
#ok above this works -> eureka client registered to the server
eureka.instance.health-check-url-path=/actuator/health
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=ALWAYS



# eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8761/eureka/


#eureka.client.service-url.default-zone=http://127.0.0.1:8761/eureka/
#eureka.instance.hostname=localhost
#both above works -> but make sure to use 127.0.0.1:8761 instead of localhost !!



orginairports.shutdown=SEA
management.security.enabled=false
#curl -H "Content-Type: application/json" -X POST -d '{}' localhost:8090/actuator/refresh


eureka.instance.lease-renewal-interval-in-seconds=3
# eureka.instance.lease-expiration-duration-in-seconds=10
# eureka.client.registry-fetch-interval-seconds=10
# eureka.client.disable-delta=true

# eureka.client.registry-fetch-interval-seconds=30
# eureka.instance.lease-expiration-duration-in-seconds=5
# eureka.instance.lease-renewal-interval-in-seconds=30