spring.application.name=eurekaserver
# eureka.client.serviceUrl.defaultZone=http://registration:8761/eureka/
# eureka.instance.hostname=macbook
# eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:8761/eureka
eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER:http://192.168.0.180:8761/eureka/}
eureka.client.registerWithEureka=false
eureka.client.fetchRegistry=false

#spring.cloud.config.enabled=false
#spring.cloud.config.import-check.enabled=false
# spring.cloud.config.uri=http://127.0.0.1:8888 <- before
spring.cloud.config.uri=http://192.168.0.180:8888
#spring.config.import=optional:configserver:http://localhost:8888
spring.profiles.active=[default]
management.endpoints.web.exposure.include=refresh

#https://www.python2.net/questions-1060311.htm

# eureka.server.maxThreadsForPeerReplication=0
#eureka docker Network level connection to peer registration; retrying after delay  -> kinda fixed?


# eureka.server.expected-client-renewal-interval-seconds=3
# eureka.instance.lease-expiration-duration-in-seconds=90
# eureka.server.eviction-interval-timer-in-ms=60000
# eureka.server.renewal-percent-threshold=0.85
# eureka.server.renewal-threshold-update-interval-ms=900000



#https://github.com/Netflix/eureka/issues/1273 ->
# Replication timeout.  Default is 200
eureka.server.peer-node-read-timeout-ms=10000
# Others to consider
eureka.server.max-idle-thread-age-in-minutes-for-peer-replication=15
eureka.server.max-threads-for-status-replication=10
eureka.server.peer-node-connect-timeout-ms=1000
eureka.server.peer-node-connection-idle-timeout-seconds=30
eureka.server.eviction-interval-timer-in-ms=10000       #https://assu10.github.io/dev/2020/12/05/spring-cloud-eureka-configuration/